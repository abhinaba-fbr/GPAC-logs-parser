%!PS-Adobe-2.0 EPSF-2.0
%%Title: plots/video_bitrate_level.eps
%%Creator: gnuplot 5.4 patchlevel 4
%%CreationDate: Mon Jan 30 14:04:54 2023
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext true def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (plots/video_bitrate_level.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.4 patchlevel 4)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Jan 30 14:04:54 2023)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PL PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Arial) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
770 903 M
63 0 V
6114 0 R
-63 0 V
stroke
686 903 M
[ [(Arial) 140.0 0.0 true true 0 ( 500)]
] -46.7 MRshow
/Arial findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
LCb setrgbcolor
770 1402 M
63 0 V
6114 0 R
-63 0 V
stroke
686 1402 M
[ [(Arial) 140.0 0.0 true true 0 ( 1000)]
] -46.7 MRshow
/Arial findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
770 1902 M
63 0 V
6114 0 R
-63 0 V
stroke
686 1902 M
[ [(Arial) 140.0 0.0 true true 0 ( 1500)]
] -46.7 MRshow
/Arial findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
770 2401 M
63 0 V
6114 0 R
-63 0 V
stroke
686 2401 M
[ [(Arial) 140.0 0.0 true true 0 ( 2000)]
] -46.7 MRshow
/Arial findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
770 2901 M
63 0 V
6114 0 R
-63 0 V
stroke
686 2901 M
[ [(Arial) 140.0 0.0 true true 0 ( 2500)]
] -46.7 MRshow
/Arial findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
770 3400 M
63 0 V
6114 0 R
-63 0 V
stroke
686 3400 M
[ [(Arial) 140.0 0.0 true true 0 ( 3000)]
] -46.7 MRshow
/Arial findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
770 3900 M
63 0 V
6114 0 R
-63 0 V
stroke
686 3900 M
[ [(Arial) 140.0 0.0 true true 0 ( 3500)]
] -46.7 MRshow
/Arial findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
770 4399 M
63 0 V
6114 0 R
-63 0 V
stroke
686 4399 M
[ [(Arial) 140.0 0.0 true true 0 ( 4000)]
] -46.7 MRshow
/Arial findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
770 448 M
0 63 V
0 4108 R
0 -63 V
stroke
770 308 M
[ [(Arial) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
/Arial findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1803 448 M
0 63 V
0 4108 R
0 -63 V
stroke
1803 308 M
[ [(Arial) 140.0 0.0 true true 0 ( 50)]
] -46.7 MCshow
/Arial findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2836 448 M
0 63 V
0 4108 R
0 -63 V
stroke
2836 308 M
[ [(Arial) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
/Arial findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3869 448 M
0 63 V
0 4108 R
0 -63 V
stroke
3869 308 M
[ [(Arial) 140.0 0.0 true true 0 ( 150)]
] -46.7 MCshow
/Arial findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4902 448 M
0 63 V
0 4108 R
0 -63 V
stroke
4902 308 M
[ [(Arial) 140.0 0.0 true true 0 ( 200)]
] -46.7 MCshow
/Arial findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
5935 448 M
0 63 V
0 4108 R
0 -63 V
stroke
5935 308 M
[ [(Arial) 140.0 0.0 true true 0 ( 250)]
] -46.7 MCshow
/Arial findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
770 4619 N
770 448 L
6177 0 V
0 4171 V
-6177 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
133 2533 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Arial) 140.0 0.0 true true 0 (Bitrate Level \(kbps\))]
] -46.7 MCshow
grestore
/Arial findfont 140 scalefont setfont
LTb
LCb setrgbcolor
3858 98 M
[ [(Arial) 140.0 0.0 true true 0 (Chunck Number)]
] -46.7 MCshow
/Arial findfont 140 scalefont setfont
LTb
% Begin plot #1
1.000 UP
2.000 UL
LTb
0.34 0.71 0.91 C
LCb setrgbcolor
6296 4486 M
('data.dat') Rshow
1.000 UP
2.000 UL
LTb
0.34 0.71 0.91 C
6380 4486 M
399 0 V
770 448 M
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 44 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
20 0 V
21 42 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 47 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
20 43 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 41 V
20 0 V
21 0 V
21 0 V
20 0 V
21 72 V
21 0 V
20 0 V
21 0 V
21 62 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 126 V
21 0 V
20 0 V
21 0 V
21 72 V
20 0 V
21 196 V
21 0 V
20 241 V
21 0 V
21 0 V
20 212 V
21 0 V
21 302 V
20 0 V
21 586 V
20 0 V
21 351 V
21 0 V
20 0 V
21 0 V
21 593 V
20 0 V
21 448 V
21 0 V
20 0 V
21 0 V
21 313 V
20 0 V
21 0 V
21 0 V
20 379 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 -1733 V
20 0 V
21 0 V
21 0 V
20 593 V
21 0 V
21 0 V
20 0 V
21 0 V
20 0 V
21 0 V
21 448 V
20 0 V
21 0 V
21 0 V
20 0 V
21 -1978 V
21 0 V
20 0 V
21 -755 V
21 0 V
stroke 5873 1193 M
20 0 V
21 0 V
21 0 V
20 -394 V
21 0 V
21 0 V
20 0 V
21 126 V
21 0 V
20 0 V
21 72 V
21 0 V
20 0 V
21 196 V
21 0 V
20 0 V
21 0 V
21 241 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 212 V
20 0 V
21 0 V
21 0 V
20 -453 V
21 0 V
21 0 V
20 241 V
21 0 V
20 0 V
21 0 V
21 0 V
20 212 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 0 V
21 0 V
21 0 V
20 -453 V
21 0 V
21 0 V
20 241 V
770 448 Box
791 448 Box
811 448 Box
832 448 Box
853 448 Box
873 448 Box
894 448 Box
915 448 Box
935 448 Box
956 448 Box
977 448 Box
997 448 Box
1018 448 Box
1039 448 Box
1059 448 Box
1080 448 Box
1101 448 Box
1121 448 Box
1142 448 Box
1163 448 Box
1183 448 Box
1204 448 Box
1224 448 Box
1245 448 Box
1266 448 Box
1286 448 Box
1307 448 Box
1328 448 Box
1348 448 Box
1369 448 Box
1390 448 Box
1410 448 Box
1431 448 Box
1452 448 Box
1472 448 Box
1493 448 Box
1514 448 Box
1534 448 Box
1555 448 Box
1576 448 Box
1596 448 Box
1617 448 Box
1638 448 Box
1658 448 Box
1679 448 Box
1700 448 Box
1720 448 Box
1741 448 Box
1762 448 Box
1782 448 Box
1803 448 Box
1824 448 Box
1844 448 Box
1865 448 Box
1886 448 Box
1906 448 Box
1927 448 Box
1948 448 Box
1968 448 Box
1989 448 Box
2010 448 Box
2030 448 Box
2051 448 Box
2072 448 Box
2092 448 Box
2113 448 Box
2133 448 Box
2154 448 Box
2175 448 Box
2195 448 Box
2216 448 Box
2237 448 Box
2257 492 Box
2278 492 Box
2299 492 Box
2319 492 Box
2340 492 Box
2361 492 Box
2381 492 Box
2402 492 Box
2423 492 Box
2443 492 Box
2464 492 Box
2485 492 Box
2505 492 Box
2526 492 Box
2547 492 Box
2567 492 Box
2588 492 Box
2609 492 Box
2629 492 Box
2650 492 Box
2671 492 Box
2691 492 Box
2712 492 Box
2733 492 Box
2753 492 Box
2774 492 Box
2795 492 Box
2815 492 Box
2836 492 Box
2857 492 Box
2877 492 Box
2898 492 Box
2919 492 Box
2939 492 Box
2960 492 Box
2980 492 Box
3001 534 Box
3022 534 Box
3042 534 Box
3063 534 Box
3084 534 Box
3104 534 Box
3125 534 Box
3146 581 Box
3166 581 Box
3187 581 Box
3208 581 Box
3228 581 Box
3249 581 Box
3270 581 Box
3290 581 Box
3311 581 Box
3332 581 Box
3352 581 Box
3373 581 Box
3394 581 Box
3414 581 Box
3435 581 Box
3456 581 Box
3476 581 Box
3497 581 Box
3518 581 Box
3538 581 Box
3559 581 Box
3580 581 Box
3600 581 Box
3621 581 Box
3642 581 Box
3662 581 Box
3683 581 Box
3704 581 Box
3724 581 Box
3745 581 Box
3766 581 Box
3786 581 Box
3807 581 Box
3828 581 Box
3848 581 Box
3869 581 Box
3889 624 Box
3910 624 Box
3931 624 Box
3951 624 Box
3972 624 Box
3993 624 Box
4013 624 Box
4034 624 Box
4055 624 Box
4075 624 Box
4096 624 Box
4117 665 Box
4137 665 Box
4158 665 Box
4179 665 Box
4199 665 Box
4220 737 Box
4241 737 Box
4261 737 Box
4282 737 Box
4303 799 Box
4323 799 Box
4344 799 Box
4365 799 Box
4385 799 Box
4406 799 Box
4427 799 Box
4447 799 Box
4468 925 Box
4489 925 Box
4509 925 Box
4530 925 Box
4551 997 Box
4571 997 Box
4592 1193 Box
4613 1193 Box
4633 1434 Box
4654 1434 Box
4675 1434 Box
4695 1646 Box
4716 1646 Box
4737 1948 Box
4757 1948 Box
4778 2534 Box
4798 2534 Box
4819 2885 Box
4840 2885 Box
4860 2885 Box
4881 2885 Box
4902 3478 Box
4922 3478 Box
4943 3926 Box
4964 3926 Box
4984 3926 Box
5005 3926 Box
5026 4239 Box
5046 4239 Box
5067 4239 Box
5088 4239 Box
5108 4618 Box
5129 4618 Box
5150 4618 Box
5170 4618 Box
5191 4618 Box
5212 4618 Box
5232 4618 Box
5253 4618 Box
5274 4618 Box
5294 4618 Box
5315 4618 Box
5336 4618 Box
5356 4618 Box
5377 4618 Box
5398 4618 Box
5418 4618 Box
5439 4618 Box
5460 2885 Box
5480 2885 Box
5501 2885 Box
5522 2885 Box
5542 3478 Box
5563 3478 Box
5584 3478 Box
5604 3478 Box
5625 3478 Box
5645 3478 Box
5666 3478 Box
5687 3926 Box
5707 3926 Box
5728 3926 Box
5749 3926 Box
5769 3926 Box
5790 1948 Box
5811 1948 Box
5831 1948 Box
5852 1193 Box
5873 1193 Box
5893 1193 Box
5914 1193 Box
5935 1193 Box
5955 799 Box
5976 799 Box
5997 799 Box
6017 799 Box
6038 925 Box
6059 925 Box
6079 925 Box
6100 997 Box
6121 997 Box
6141 997 Box
6162 1193 Box
6183 1193 Box
6203 1193 Box
6224 1193 Box
6245 1434 Box
6265 1434 Box
6286 1434 Box
6307 1434 Box
6327 1434 Box
6348 1434 Box
6369 1646 Box
6389 1646 Box
6410 1646 Box
6431 1646 Box
6451 1193 Box
6472 1193 Box
6493 1193 Box
6513 1434 Box
6534 1434 Box
6554 1434 Box
6575 1434 Box
6596 1434 Box
6616 1646 Box
6637 1646 Box
6658 1646 Box
6678 1646 Box
6699 1646 Box
6720 1646 Box
6740 1646 Box
6761 1646 Box
6782 1646 Box
6802 1646 Box
6823 1646 Box
6844 1646 Box
6864 1193 Box
6885 1193 Box
6906 1193 Box
6926 1434 Box
6579 4486 Box
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
770 4619 N
770 448 L
6177 0 V
0 4171 V
-6177 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
3858 4829 M
[ [(Arial) 140.0 0.0 true true 0 (Video Bitrate Level)]
] -46.7 MCshow
/Arial findfont 140 scalefont setfont
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Arial
